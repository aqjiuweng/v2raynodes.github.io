<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2raynodes.github.io/news/article-22978.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>基于RestTemplate扩展，支持Get请求传递javaBean参数</title>
        <meta name="description" content="项目中使用了RestTemplate来对第三方接口进行请求。 使用get方式请求查询接口时，需要将参数拼接到url中，不支持使用JavaBean传参，编写代码不友好。 一般需要这么写：  如果不使用占" />
        <link rel="icon" href="__ADDON__/img/v2raynodes/favicon.ico" type="image/x-icon"/>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Dosis:300,400,500,,600,700,700i|Lato:300,300i,400,400i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/v2raynodes/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/v2raynodes/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/v2raynodes/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/v2raynodes/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/v2raynodes/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/v2raynodes/style.css" rel="stylesheet">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-Q31DFYB8XJ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-Q31DFYB8XJ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top">
        <div class="container d-flex align-items-center justify-content-between">
                        <a href="/" class="logo">V2ray Nodes</a>
                        <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                    
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section id="breadcrumbs" class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h1>基于RestTemplate扩展，支持Get请求传递javaBean参数</h1>
                </div>
                <div>
                    <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                          				  				  				<div id="content_views" class="htmledit_views"> <p>项目中使用了RestTemplate来对第三方接口进行请求。</p> <p>使用get方式请求查询接口时，需要将参数拼接到url中，不支持使用JavaBean传参，编写代码不友好。</p> <p>一般需要这么写：</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/96632c56d2b86f729cb61db1e47cece8.jpg"></p> <p>如果不使用占位符的写法，服务端将收不到参数。</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/a15de9876b7fbfca48f37ff4659b313f.jpg"></p> <p>服务端接口定义如下，请求结果是参数解析失败，返回400错误码</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/c7c8f58f9b811d84e2f948126d20edcc.jpg"></p> <p>这个时候就想，能不能直接传map，或者一个JavaBean来实现传参数呢？</p> <p>于是查看源码，发现RestTemplate有扩展点可以进行扩展，下面就开始扩展之路了。</p> <p>RestTemplate有一个接口，专门处理请求url的，</p> <pre><code class="language-java">public interface UriTemplateHandler {  //这个方法就是我们传入的参数map  URI expand(String uriTemplate, Map&lt;String, ?&gt; uriVariables);  URI expand(String uriTemplate, Object... uriVariables);  }</code></pre> <p>于是自定义一个UriTemplateHandler，来对请求url进行处理。</p> <p>代码如下：</p> <pre><code class="language-java">public class GetUriTemplateHandler implements UriTemplateHandler {  private UriTemplateHandler uriTemplateHandler = new DefaultUriBuilderFactory();  @Override  public URI expand(String uriTemplate, Map&lt;String, ?&gt; uriVariables) {  //利用UriComponentsBuilder将请求参数追加到url，GetParamMultiValueMap是自定义的一个map  uriTemplate = UriComponentsBuilder  .fromHttpUrl(uriTemplate)  .queryParams(new GetParamMultiValueMap(uriVariables)).toUriString();  log.info("处理之后的url ==&gt; {}", uriTemplate);  return uriTemplateHandler.expand(uriTemplate, uriVariables);  }  @Override  public URI expand(String uriTemplate, Object... uriVariables) {  return uriTemplateHandler.expand(uriTemplate, uriVariables);  }  }</code></pre> <p>GetParamMultiValueMap实现如下:</p> <pre><code class="language-java">public class GetParamMultiValueMap&lt;K,V&gt; implements MultiValueMap&lt;K, V&gt; {  private final Map&lt;K, List&lt;V&gt;&gt; map;  public GetParamMultiValueMap(Map&lt;K, V&gt; paramMap) {  Assert.notNull(paramMap, "'map' must not be null");  //将请求参数转换成MultiValueMap  this.map = new HashMap&lt;&gt;();  paramMap.forEach((k, v) -&gt; {  if (v instanceof List) {  map.put(k, (List&lt;V&gt;) v);  } else {  map.put(k, Lists.newArrayList(v));  }  });  }  }</code></pre> <p>GetUriTemplateHandler实现好之后，只需要在RestTemplate实例化之后将默认的UriTemplateHandler替换就可以使用自己实现的功能了</p> <pre><code class="language-java">@Configuration  public class RestTemplateConfig {  @ConditionalOnClass(value = RestTemplate.class)  @Bean  public RestTemplate restTemplate() {  RestTemplate restTemplate = new RestTemplate();  //默认使用的jdk的http请求组件 替换成okhttp3  restTemplate.setRequestFactory(new OkHttp3ClientHttpRequestFactory());  //使用自定义的uri处理器，实现参数追加到url的功能  restTemplate.setUriTemplateHandler(new GetUriTemplateHandler());  return restTemplate;  }  }</code></pre> <p>下面再看测试结果：</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/ded030a8340bb232c91f17b342ecd8a8.jpg"></p> <p>收到了服务端的正确返回。</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/5d6a69ec9fca46e7c6f6bc2e60967a45.jpg"></p> <p>现在还是传递的map,能不能直接传一个JavaBean呢？</p> <p>答案是可以的，通过对RestTemplate进行包装，</p> <p>借助apache-commont包将JavaBean转换成map</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/75da9049c001ceb7b0ee9cfb5dea0c56.jpg"></p> <p>注入到Spring容器</p> <pre><code class="language-java">@Bean  public RestTemplateWrapper restTemplateWrapper(RestTemplate restTemplate) {  return new RestTemplateWrapper(restTemplate);  }</code></pre> <p>测试使用bean可以使用可以成功传递参数。</p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230217/1247eeccbf06de8253c6c7a05ed6f894.jpg"></p> <p>成功接收服务的响应</p> <pre><code class="language-Go">ok receive message ===&gt; test</code></pre> <p>上面内容就是基于RestTemplate对Get请求参数扩展的处理了，如果有更多的实践方案欢迎一起探讨。</p> <p>&nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-22519.htm">成都宠物领养平台电话号码查询（成都宠物领养中心官网收容中心）</a></p>
                                        <p>下一个：<a href="/news/article-22979.htm">JavaScript定时器的各种案例</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-8-12-free-node-subscribe.htm" title="「8月12日」最高速度22M/S，2024年Shadowrocket/SSR/V2ray/Clash每天更新免费机场订阅链接">「8月12日」最高速度22M/S，2024年Shadowrocket/SSR/V2ray/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-29-free-node-subscribe.htm" title="「6月29日」最高速度21.9M/S，2024年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅链接">「6月29日」最高速度21.9M/S，2024年V2ray/Shadowrocket/SSR/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-1-free-node-subscribe-links.htm" title="「12月1日」最高速度18.7M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅链接">「12月1日」最高速度18.7M/S，2024年Clash/V2ray/SSR/Shadowrocket每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-6-3-free-clash.htm" title="6月3日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度21.9M/S">6月3日 | 最新SSR/Clash/V2ray/Shadowrocket高速免费节点，最高速度21.9M/S</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-3-free-subscribe-node.htm" title="「11月3日」最高速度22.6M/S，2024年Clash/Shadowrocket/V2ray/SSR每天更新免费机场订阅链接">「11月3日」最高速度22.6M/S，2024年Clash/Shadowrocket/V2ray/SSR每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-7-17-clash-node.htm" title="「7月17日」最高速度20.5M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费机场订阅链接">「7月17日」最高速度20.5M/S，2024年SSR/V2ray/Shadowrocket/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-27-clash-node.htm" title="「8月27日」最高速度22.9M/S，2024年V2ray/Clash/Shadowrocket/SSR每天更新免费机场订阅链接">「8月27日」最高速度22.9M/S，2024年V2ray/Clash/Shadowrocket/SSR每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-28-shadowrocket-node.htm" title="「9月28日」最高速度21.9M/S，2024年SSR/Shadowrocket/V2ray/Clash每天更新免费机场订阅链接">「9月28日」最高速度21.9M/S，2024年SSR/Shadowrocket/V2ray/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-1-free-ssr-subscribe.htm" title="「9月1日」最高速度18M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅链接">「9月1日」最高速度18M/S，2024年V2ray/SSR/Shadowrocket/Clash每天更新免费机场订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-26-free-v2ray.htm" title="「11月26日」最高速度22.4M/S，2024年Shadowrocket/V2ray/Clash/SSR每天更新免费机场订阅链接">「11月26日」最高速度22.4M/S，2024年Shadowrocket/V2ray/Clash/SSR每天更新免费机场订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-07/" title="2024-07 归档">2024-07</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2024-06/" title="2024-06 归档">2024-06</a></h4>
            </li>
                    </ul>
    </div>
</div>



                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container py-4">
            <div class="copyright">
                <a href="/">V2rayNodes节点订阅站</a> 版权所有 Powered by WordPress
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/v2raynodes/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/v2raynodes/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/v2raynodes/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>